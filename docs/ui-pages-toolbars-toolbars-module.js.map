{"version":3,"sources":["webpack:///./src/app/ui-pages/toolbars/documentation/toolbars-doc.component.html","webpack:///./src/app/ui-pages/toolbars/documentation/toolbars-doc.component.scss","webpack:///./src/app/ui-pages/toolbars/documentation/toolbars-doc.component.ts","webpack:///./src/app/ui-pages/toolbars/examples/toolbar-examples.component.ts","webpack:///./src/app/ui-pages/toolbars/examples/toolbars-examples.component.html","webpack:///./src/app/ui-pages/toolbars/examples/toolbars-examples.component.scss","webpack:///./src/app/ui-pages/toolbars/toolbars-routing.module.ts","webpack:///./src/app/ui-pages/toolbars/toolbars.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,2/D;;;;;;;;;;;ACAA,+DAA+D,uL;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,uCAAQ,GAAR;IACA,CAAC;IALU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,2IAA4C;;SAE7C,CAAC;;OACW,oBAAoB,CAOhC;IAAD,2BAAC;CAAA;AAPgC;;;;;;;;;;;;;;;;;;;ACPiB;AAC2B;AAY7E;IAgBE,mCAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAdtD,iBAAY,GAAkB;YAC5B;gBACE,KAAK,EAAE,eAAe;gBACtB,QAAQ,EAAE,eAAe;aAC1B;YACD;gBACE,KAAK,EAAE,cAAc;gBACrB,QAAQ,EAAE,oBAAoB;aAC/B;YACD;gBACE,KAAK,EAAE,mBAAmB;gBAC1B,QAAQ,EAAE,oBAAoB;aAC/B;SAAC,CAAC;IAEqD,CAAC;IAI3D,4CAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC;IACvD,CAAC;IAtBU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,gJAAiD;;SAElD,CAAC;+EAiBsC,0FAAgB;OAhB3C,yBAAyB,CAwBrC;IAAD,gCAAC;CAAA;AAxBqC;;;;;;;;;;;;ACbtC,iKAAiK,0BAA0B,yBAAyB,iBAAiB,wlB;;;;;;;;;;;ACArO,+DAA+D,uL;;;;;;;;;;;;;;;;;;;;ACAtB;AACc;AACuB;AACI;AAElF,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,8FAAyB;KACvC;IACD;QACI,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,0FAAoB;KAClC;IACD;QACI,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,UAAU;QACtB,SAAS,EAAE,MAAM;KAClB;CACN,CAAC;AAMF;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QAJjC,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACzBa;AACN;AAEqC;AACI;AAChB;AAOpC;AAe9B;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAd1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,mEAAc;gBACd,mEAAc;gBACd,mEAAc;gBACd,qEAAgB;gBAChB,8EAAqB;aACtB;YACD,YAAY,EAAE;gBACV,8FAAyB;gBACzB,0FAAoB;aACrB;SACJ,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ","file":"ui-pages-toolbars-toolbars-module.js","sourcesContent":["module.exports = \"<div class=\\\"page-layout\\\">\\r\\n  <div class=\\\"page-container documentation\\\">\\r\\n    <h1 class=\\\"utils--text-32 utils--margin-top-60 utils--margin-bottom-0\\\">Toolbars</h1>\\r\\n    <p class=\\\"documentation-text\\\">\\r\\n      ntx-toolbar is a component used to place a toolbar in your app.\\r\\n    </p>\\r\\n\\r\\n    <p class=\\\"documentation-text\\\">\\r\\n      Toolbars are usually used above a content area to display the title of the current page, and show relevant action buttons for that page.\\r\\n    </p>\\r\\n\\r\\n    <h1 class=\\\"utils--text-32 utils--margin-top-60 utils--margin-bottom-0\\\">Toolbars types</h1>\\r\\n    <p class=\\\"documentation-text\\\">\\r\\n      There are three types of nxt-toolbar: use <span class=\\\"documentation-code\\\">ntx-toolbar</span> if you need basic toolbar, use <span class=\\\"documentation-code\\\">ntx-toolbar-back</span> if you have a page with a second level of navigation and you need a return button, and you can use <span class=\\\"documentation-code\\\">ntx-toolbar-tabs</span> if you need a toolbar with navigation tabs.\\r\\n    </p>\\r\\n\\r\\n    <h1 class=\\\"utils--text-32 utils--margin-top-60 utils--margin-bottom-0\\\">Configuration</h1>\\r\\n    <p class=\\\"documentation-text\\\">\\r\\n        Keep in mind that each of these components need more components to be complete. This is the case of the options menu of the user profile or the tabs. In ntx-toolbar.module.ts file all modules needed are imported.\\r\\n    </p>\\r\\n\\r\\n    <h1 class=\\\"utils--text-32 utils--margin-top-60 utils--margin-bottom-0\\\">Customization</h1>\\r\\n    <p class=\\\"documentation-text\\\">\\r\\n      Each Netex application has it's corporate color that must be seen in the toolbar. If you need the application to have the Talent Cloud color, you have to put the <span class=\\\"documentation-code\\\">theme-talent</span> class in the body, and if you need the application to have the Content Cloud color, you have to put the <span class=\\\"documentation-code\\\">theme-content</span> class in the body.\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpLXBhZ2VzL3Rvb2xiYXJzL2RvY3VtZW50YXRpb24vdG9vbGJhcnMtZG9jLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-toolbars-doc',\r\n  templateUrl: './toolbars-doc.component.html',\r\n  styleUrls: ['./toolbars-doc.component.scss']\r\n})\r\nexport class ToolbarsDocComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DashboardService } from 'src/app/shared/services/dashboard.service';\r\n\r\nexport interface ToolbarType {\r\n  label: string;\r\n  selector: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-toolbars-examples',\r\n  templateUrl: './toolbars-examples.component.html',\r\n  styleUrls: ['./toolbars-examples.component.scss']\r\n})\r\nexport class ToolbarsExamplesComponent implements OnInit {\r\n\r\n  toolbarTypes: ToolbarType[] = [\r\n    {\r\n      label: \"basic toolbar\",\r\n      selector: \"<ntx-toolbar>\"\r\n    },\r\n    {\r\n      label: \"back toolbar\",\r\n      selector: \"<ntx-toolbar-back>\"\r\n    },\r\n    {\r\n      label: \"toolbar with tabs\",\r\n      selector: \"<ntx-toolbar-tabs>\"\r\n    }];\r\n\r\n  constructor(private dashboardService: DashboardService) { }\r\n\r\n  apps: any[];\r\n\r\n  ngOnInit() {\r\n    this.apps = this.dashboardService.getDashboardApps();\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"page-layout\\\">\\r\\n  <div class=\\\"page-container\\\">\\r\\n    <ntx-card-simple *ngFor=\\\"let type of toolbarTypes\\\"\\r\\n      title=\\\"{{ type.label | uppercase }}\\\"\\r\\n      subtitle=\\\"{{ type.selector }}\\\">\\r\\n        <ntx-toolbar [apps]=\\\"apps\\\" *ngIf=\\\"type.label==='basic toolbar'\\\">\\r\\n          <ntx-list-two-lines-avatar></ntx-list-two-lines-avatar>\\r\\n        </ntx-toolbar>\\r\\n        <ntx-toolbar-back [apps]=\\\"apps\\\" *ngIf=\\\"type.label==='back toolbar'\\\">\\r\\n          <ntx-list-two-lines-avatar></ntx-list-two-lines-avatar>\\r\\n        </ntx-toolbar-back>\\r\\n        <ntx-toolbar-tabs [apps]=\\\"apps\\\" *ngIf=\\\"type.label==='toolbar with tabs'\\\">\\r\\n          <ntx-list-two-lines-avatar></ntx-list-two-lines-avatar>\\r\\n        </ntx-toolbar-tabs>\\r\\n    </ntx-card-simple>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpLXBhZ2VzL3Rvb2xiYXJzL2V4YW1wbGVzL3Rvb2xiYXJzLWV4YW1wbGVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ToolbarsDocComponent } from './documentation/toolbars-doc.component';\r\nimport { ToolbarsExamplesComponent } from './examples/toolbar-examples.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'examples',\r\n        component: ToolbarsExamplesComponent\r\n    },\r\n    {\r\n        path: 'documentation',\r\n        component: ToolbarsDocComponent\r\n    },\r\n    {\r\n        path: '',\r\n        redirectTo: 'examples',\r\n        pathMatch: 'full'\r\n      }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ToolbarsRoutingModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ToolbarsDocComponent } from './documentation/toolbars-doc.component';\r\nimport { ToolbarsExamplesComponent } from './examples/toolbar-examples.component';\r\nimport { ToolbarsRoutingModule } from './toolbars-routing.module';\r\n\r\nimport {\r\n  NtxToolbarModule,\r\n  NtxMenusModule,\r\n  NtxCardsModule,\r\n  NtxListsModule\r\n} from '@netex/ux-components';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NtxCardsModule,\r\n    NtxMenusModule,\r\n    NtxListsModule,\r\n    NtxToolbarModule,\r\n    ToolbarsRoutingModule\r\n  ],\r\n  declarations: [\r\n      ToolbarsExamplesComponent,\r\n      ToolbarsDocComponent\r\n    ]\r\n})\r\nexport class ToolbarsModule { }\r\n"],"sourceRoot":""}